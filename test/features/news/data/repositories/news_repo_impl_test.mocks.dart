// Mocks generated by Mockito 5.1.0 from annotations
// in newsify_demo/test/features/news/data/repositories/news_repo_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:http/http.dart' as _i3;
import 'package:http/retry.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:newsify_demo/features/news/data/datasources/news_datasource.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRetryClient_0 extends _i1.Fake implements _i2.RetryClient {}

class _FakeResponse_1 extends _i1.Fake implements _i3.Response {}

/// A class which mocks [NewsRemoteDatasourcesImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRemoteDatasourcesImpl extends _i1.Mock
    implements _i4.NewsRemoteDatasourcesImpl {
  MockNewsRemoteDatasourcesImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RetryClient get retryClient =>
      (super.noSuchMethod(Invocation.getter(#retryClient),
          returnValue: _FakeRetryClient_0()) as _i2.RetryClient);
  @override
  set retryClient(_i2.RetryClient? _retryClient) =>
      super.noSuchMethod(Invocation.setter(#retryClient, _retryClient),
          returnValueForMissingStub: null);
  @override
  _i5.Future<dynamic> getNews() =>
      (super.noSuchMethod(Invocation.method(#getNews, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.FutureOr<_i3.Response> onTimeOut() =>
      (super.noSuchMethod(Invocation.method(#onTimeOut, []),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i5.FutureOr<_i3.Response>);
}
